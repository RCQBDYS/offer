<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.offer.mapper.EducationalExperienceMapper">
  <resultMap id="BaseResultMap" type="com.example.offer.model.EducationalExperience">
    <id column="eduId" jdbcType="INTEGER" property="eduid" />
    <result column="userId" jdbcType="INTEGER" property="userid" />
    <result column="eduSchool" jdbcType="VARCHAR" property="eduschool" />
    <result column="eduQualifications" jdbcType="VARCHAR" property="eduqualifications" />
    <result column="eduStartDate" jdbcType="TIMESTAMP" property="edustartdate" />
    <result column="eduEndDate" jdbcType="TIMESTAMP" property="eduenddate" />
    <result column="eduMajor" jdbcType="VARCHAR" property="edumajor" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    eduId, userId, eduSchool, eduQualifications, eduStartDate, eduEndDate, eduMajor
  </sql>
  <select id="selectByExample" parameterType="com.example.offer.model.EducationalExperienceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from educational_experience
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from educational_experience
    where eduId = #{eduid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from educational_experience
    where eduId = #{eduid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.offer.model.EducationalExperienceExample">
    delete from educational_experience
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.offer.model.EducationalExperience">
    insert into educational_experience (eduId, userId, eduSchool, 
      eduQualifications, eduStartDate, eduEndDate, 
      eduMajor)
    values (#{eduid,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{eduschool,jdbcType=VARCHAR}, 
      #{eduqualifications,jdbcType=VARCHAR}, #{edustartdate,jdbcType=TIMESTAMP}, #{eduenddate,jdbcType=TIMESTAMP}, 
      #{edumajor,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.offer.model.EducationalExperience">
    insert into educational_experience
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="eduid != null">
        eduId,
      </if>
      <if test="userid != null">
        userId,
      </if>
      <if test="eduschool != null">
        eduSchool,
      </if>
      <if test="eduqualifications != null">
        eduQualifications,
      </if>
      <if test="edustartdate != null">
        eduStartDate,
      </if>
      <if test="eduenddate != null">
        eduEndDate,
      </if>
      <if test="edumajor != null">
        eduMajor,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="eduid != null">
        #{eduid,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="eduschool != null">
        #{eduschool,jdbcType=VARCHAR},
      </if>
      <if test="eduqualifications != null">
        #{eduqualifications,jdbcType=VARCHAR},
      </if>
      <if test="edustartdate != null">
        #{edustartdate,jdbcType=TIMESTAMP},
      </if>
      <if test="eduenddate != null">
        #{eduenddate,jdbcType=TIMESTAMP},
      </if>
      <if test="edumajor != null">
        #{edumajor,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.offer.model.EducationalExperienceExample" resultType="java.lang.Long">
    select count(*) from educational_experience
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update educational_experience
    <set>
      <if test="record.eduid != null">
        eduId = #{record.eduid,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null">
        userId = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.eduschool != null">
        eduSchool = #{record.eduschool,jdbcType=VARCHAR},
      </if>
      <if test="record.eduqualifications != null">
        eduQualifications = #{record.eduqualifications,jdbcType=VARCHAR},
      </if>
      <if test="record.edustartdate != null">
        eduStartDate = #{record.edustartdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.eduenddate != null">
        eduEndDate = #{record.eduenddate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.edumajor != null">
        eduMajor = #{record.edumajor,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update educational_experience
    set eduId = #{record.eduid,jdbcType=INTEGER},
      userId = #{record.userid,jdbcType=INTEGER},
      eduSchool = #{record.eduschool,jdbcType=VARCHAR},
      eduQualifications = #{record.eduqualifications,jdbcType=VARCHAR},
      eduStartDate = #{record.edustartdate,jdbcType=TIMESTAMP},
      eduEndDate = #{record.eduenddate,jdbcType=TIMESTAMP},
      eduMajor = #{record.edumajor,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.offer.model.EducationalExperience">
    update educational_experience
    <set>
      <if test="userid != null">
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="eduschool != null">
        eduSchool = #{eduschool,jdbcType=VARCHAR},
      </if>
      <if test="eduqualifications != null">
        eduQualifications = #{eduqualifications,jdbcType=VARCHAR},
      </if>
      <if test="edustartdate != null">
        eduStartDate = #{edustartdate,jdbcType=TIMESTAMP},
      </if>
      <if test="eduenddate != null">
        eduEndDate = #{eduenddate,jdbcType=TIMESTAMP},
      </if>
      <if test="edumajor != null">
        eduMajor = #{edumajor,jdbcType=VARCHAR},
      </if>
    </set>
    where eduId = #{eduid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.offer.model.EducationalExperience">
    update educational_experience
    set userId = #{userid,jdbcType=INTEGER},
      eduSchool = #{eduschool,jdbcType=VARCHAR},
      eduQualifications = #{eduqualifications,jdbcType=VARCHAR},
      eduStartDate = #{edustartdate,jdbcType=TIMESTAMP},
      eduEndDate = #{eduenddate,jdbcType=TIMESTAMP},
      eduMajor = #{edumajor,jdbcType=VARCHAR}
    where eduId = #{eduid,jdbcType=INTEGER}
  </update>
</mapper>