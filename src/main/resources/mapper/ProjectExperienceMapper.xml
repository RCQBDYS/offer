<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.offer.mapper.ProjectExperienceMapper">
  <resultMap id="BaseResultMap" type="com.example.offer.model.ProjectExperience">
    <id column="projectId" jdbcType="INTEGER" property="projectid" />
    <result column="userName" jdbcType="VARCHAR" property="username" />
    <result column="projectName" jdbcType="VARCHAR" property="projectname" />
    <result column="projectRole" jdbcType="VARCHAR" property="projectrole" />
    <result column="projectStartDate" jdbcType="DATE" property="projectstartdate" />
    <result column="projectEndDate" jdbcType="DATE" property="projectenddate" />
    <result column="projectContent" jdbcType="VARCHAR" property="projectcontent" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    projectId, userName, projectName, projectRole, projectStartDate, projectEndDate, projectContent
  </sql>
  <select id="selectByExample" parameterType="com.example.offer.model.ProjectExperienceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from project_experience
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    *
    from project_experience
    where projectId = #{projectid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from project_experience
    where projectId = #{projectid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.offer.model.ProjectExperienceExample">
    delete from project_experience
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.offer.model.ProjectExperience">
    insert into project_experience (projectId, userName, projectName,
      projectRole, projectStartDate, projectEndDate, 
      projectContent)
    values (#{projectid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{projectname,jdbcType=VARCHAR},
      #{projectrole,jdbcType=VARCHAR}, #{projectstartdate,jdbcType=DATE}, #{projectenddate,jdbcType=DATE}, 
      #{projectcontent,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.offer.model.ProjectExperience">
    insert into project_experience
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="projectid != null">
        projectId,
      </if>
      <if test="userid != null">
        userId,
      </if>
      <if test="projectname != null">
        projectName,
      </if>
      <if test="projectrole != null">
        projectRole,
      </if>
      <if test="projectstartdate != null">
        projectStartDate,
      </if>
      <if test="projectenddate != null">
        projectEndDate,
      </if>
      <if test="projectcontent != null">
        projectContent,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="projectid != null">
        #{projectid,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="projectname != null">
        #{projectname,jdbcType=VARCHAR},
      </if>
      <if test="projectrole != null">
        #{projectrole,jdbcType=VARCHAR},
      </if>
      <if test="projectstartdate != null">
        #{projectstartdate,jdbcType=DATE},
      </if>
      <if test="projectenddate != null">
        #{projectenddate,jdbcType=DATE},
      </if>
      <if test="projectcontent != null">
        #{projectcontent,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.offer.model.ProjectExperienceExample" resultType="java.lang.Long">
    select count(*) from project_experience
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update project_experience
    <set>
      <if test="record.projectid != null">
        projectId = #{record.projectid,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null">
        userId = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.projectname != null">
        projectName = #{record.projectname,jdbcType=VARCHAR},
      </if>
      <if test="record.projectrole != null">
        projectRole = #{record.projectrole,jdbcType=VARCHAR},
      </if>
      <if test="record.projectstartdate != null">
        projectStartDate = #{record.projectstartdate,jdbcType=DATE},
      </if>
      <if test="record.projectenddate != null">
        projectEndDate = #{record.projectenddate,jdbcType=DATE},
      </if>
      <if test="record.projectcontent != null">
        projectContent = #{record.projectcontent,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update project_experience
    set projectId = #{record.projectid,jdbcType=INTEGER},
      userId = #{record.userid,jdbcType=INTEGER},
      projectName = #{record.projectname,jdbcType=VARCHAR},
      projectRole = #{record.projectrole,jdbcType=VARCHAR},
      projectStartDate = #{record.projectstartdate,jdbcType=DATE},
      projectEndDate = #{record.projectenddate,jdbcType=DATE},
      projectContent = #{record.projectcontent,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.offer.model.ProjectExperience">
    update project_experience
    <set>
      <if test="userid != null">
        userName = #{username,jdbcType=VARCHAR},
      </if>
      <if test="projectname != null">
        projectName = #{projectname,jdbcType=VARCHAR},
      </if>
      <if test="projectrole != null">
        projectRole = #{projectrole,jdbcType=VARCHAR},
      </if>
      <if test="projectstartdate != null">
        projectStartDate = #{projectstartdate,jdbcType=DATE},
      </if>
      <if test="projectenddate != null">
        projectEndDate = #{projectenddate,jdbcType=DATE},
      </if>
      <if test="projectcontent != null">
        projectContent = #{projectcontent,jdbcType=VARCHAR},
      </if>
    </set>
    where projectId = #{projectid,jdbcType=INTEGER}
  </update>
  <!-- 通过项目编号修改项目表-->
  <update id="updateByPrimaryKey" parameterType="com.example.offer.model.ProjectExperience">
    update project_experience
    set projectName = #{projectname,jdbcType=VARCHAR},
      projectRole = #{projectrole,jdbcType=VARCHAR},
      projectStartDate = #{projectstartdate,jdbcType=DATE},
      projectEndDate = #{projectenddate,jdbcType=DATE},
      projectContent = #{projectcontent,jdbcType=VARCHAR}
    where projectId = #{projectid,jdbcType=INTEGER}
  </update>

  <select id="selectByUserName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select *
    from project_experience
    where userName = #{username,jdbcType=VARCHAR}
  </select>
</mapper>