<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.offer.mapper.PostMessageMapper">
  <resultMap id="BaseResultMap" type="com.example.offer.model.PostMessage">
    <id column="postId" jdbcType="INTEGER" property="postid" />
    <result column="postName" jdbcType="VARCHAR" property="postname" />
    <result column="postSkill" jdbcType="VARCHAR" property="postskill" />
    <result column="postNum" jdbcType="INTEGER" property="postnum" />
    <result column="postSalary" jdbcType="DOUBLE" property="postsalary" />
    <result column="postSuccNum" jdbcType="INTEGER" property="postsuccnum" />
    <result column="postIntroduce" jdbcType="VARCHAR" property="postintroduce" />
    <result column="postRequire" jdbcType="VARCHAR" property="postrequire" />
    <result column="postAddress" jdbcType="VARCHAR" property="postaddress" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    postId, postName, postSkill, postNum, postSalary, postSuccNum, postIntroduce, postRequire, 
    postAddress
  </sql>
  <select id="selectByExample" parameterType="com.example.offer.model.PostMessageExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from post_message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from post_message
    where postId = #{postid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from post_message
    where postId = #{postid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.offer.model.PostMessageExample">
    delete from post_message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.offer.model.PostMessage">
    insert into post_message (postId, postName, postSkill, 
      postNum, postSalary, postSuccNum, 
      postIntroduce, postRequire, postAddress
      )
    values (#{postid,jdbcType=INTEGER}, #{postname,jdbcType=VARCHAR}, #{postskill,jdbcType=VARCHAR}, 
      #{postnum,jdbcType=INTEGER}, #{postsalary,jdbcType=DOUBLE}, #{postsuccnum,jdbcType=INTEGER}, 
      #{postintroduce,jdbcType=VARCHAR}, #{postrequire,jdbcType=VARCHAR}, #{postaddress,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.offer.model.PostMessage">
    insert into post_message
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="postid != null">
        postId,
      </if>
      <if test="postname != null">
        postName,
      </if>
      <if test="postskill != null">
        postSkill,
      </if>
      <if test="postnum != null">
        postNum,
      </if>
      <if test="postsalary != null">
        postSalary,
      </if>
      <if test="postsuccnum != null">
        postSuccNum,
      </if>
      <if test="postintroduce != null">
        postIntroduce,
      </if>
      <if test="postrequire != null">
        postRequire,
      </if>
      <if test="postaddress != null">
        postAddress,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="postid != null">
        #{postid,jdbcType=INTEGER},
      </if>
      <if test="postname != null">
        #{postname,jdbcType=VARCHAR},
      </if>
      <if test="postskill != null">
        #{postskill,jdbcType=VARCHAR},
      </if>
      <if test="postnum != null">
        #{postnum,jdbcType=INTEGER},
      </if>
      <if test="postsalary != null">
        #{postsalary,jdbcType=DOUBLE},
      </if>
      <if test="postsuccnum != null">
        #{postsuccnum,jdbcType=INTEGER},
      </if>
      <if test="postintroduce != null">
        #{postintroduce,jdbcType=VARCHAR},
      </if>
      <if test="postrequire != null">
        #{postrequire,jdbcType=VARCHAR},
      </if>
      <if test="postaddress != null">
        #{postaddress,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.offer.model.PostMessageExample" resultType="java.lang.Long">
    select count(*) from post_message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update post_message
    <set>
      <if test="record.postid != null">
        postId = #{record.postid,jdbcType=INTEGER},
      </if>
      <if test="record.postname != null">
        postName = #{record.postname,jdbcType=VARCHAR},
      </if>
      <if test="record.postskill != null">
        postSkill = #{record.postskill,jdbcType=VARCHAR},
      </if>
      <if test="record.postnum != null">
        postNum = #{record.postnum,jdbcType=INTEGER},
      </if>
      <if test="record.postsalary != null">
        postSalary = #{record.postsalary,jdbcType=DOUBLE},
      </if>
      <if test="record.postsuccnum != null">
        postSuccNum = #{record.postsuccnum,jdbcType=INTEGER},
      </if>
      <if test="record.postintroduce != null">
        postIntroduce = #{record.postintroduce,jdbcType=VARCHAR},
      </if>
      <if test="record.postrequire != null">
        postRequire = #{record.postrequire,jdbcType=VARCHAR},
      </if>
      <if test="record.postaddress != null">
        postAddress = #{record.postaddress,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update post_message
    set postId = #{record.postid,jdbcType=INTEGER},
      postName = #{record.postname,jdbcType=VARCHAR},
      postSkill = #{record.postskill,jdbcType=VARCHAR},
      postNum = #{record.postnum,jdbcType=INTEGER},
      postSalary = #{record.postsalary,jdbcType=DOUBLE},
      postSuccNum = #{record.postsuccnum,jdbcType=INTEGER},
      postIntroduce = #{record.postintroduce,jdbcType=VARCHAR},
      postRequire = #{record.postrequire,jdbcType=VARCHAR},
      postAddress = #{record.postaddress,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.offer.model.PostMessage">
    update post_message
    <set>
      <if test="postname != null">
        postName = #{postname,jdbcType=VARCHAR},
      </if>
      <if test="postskill != null">
        postSkill = #{postskill,jdbcType=VARCHAR},
      </if>
      <if test="postnum != null">
        postNum = #{postnum,jdbcType=INTEGER},
      </if>
      <if test="postsalary != null">
        postSalary = #{postsalary,jdbcType=DOUBLE},
      </if>
      <if test="postsuccnum != null">
        postSuccNum = #{postsuccnum,jdbcType=INTEGER},
      </if>
      <if test="postintroduce != null">
        postIntroduce = #{postintroduce,jdbcType=VARCHAR},
      </if>
      <if test="postrequire != null">
        postRequire = #{postrequire,jdbcType=VARCHAR},
      </if>
      <if test="postaddress != null">
        postAddress = #{postaddress,jdbcType=VARCHAR},
      </if>
    </set>
    where postId = #{postid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.offer.model.PostMessage">
    update post_message
    set postName = #{postname,jdbcType=VARCHAR},
      postSkill = #{postskill,jdbcType=VARCHAR},
      postNum = #{postnum,jdbcType=INTEGER},
      postSalary = #{postsalary,jdbcType=DOUBLE},
      postSuccNum = #{postsuccnum,jdbcType=INTEGER},
      postIntroduce = #{postintroduce,jdbcType=VARCHAR},
      postRequire = #{postrequire,jdbcType=VARCHAR},
      postAddress = #{postaddress,jdbcType=VARCHAR}
    where postId = #{postid,jdbcType=INTEGER}
  </update>
</mapper>